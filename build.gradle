import org.gradle.internal.os.OperatingSystem

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.5.0'
    id 'java-library'
}

group 'io.github.ngoduyanh'
project.ext.lwjglVersion = "3.3.0-SNAPSHOT"
version "${lwjglVersion}-0.1.0"

repositories {
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
}


switch (OperatingSystem.current()) {
    case OperatingSystem.LINUX:
        def osArch = System.getProperty("os.arch")
        project.ext.lwjglNatives = osArch.startsWith("arm") || osArch.startsWith("aarch64")
                ? "natives-linux-${osArch.contains("64") || osArch.startsWith("armv8") ? "arm64" : "arm32"}"
                : "natives-linux"
        break
    case OperatingSystem.MAC_OS:
        project.ext.lwjglNatives = natives-macos
        break
    case OperatingSystem.WINDOWS:
        def osArch = System.getProperty("os.arch")
        project.ext.lwjglNatives = osArch.contains("64")
                ? "natives-windows${osArch.startsWith("aarch64") ? "-arm64" : ""}"
                : "natives-windows-x86"
        break
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib"

    implementation "org.lwjgl:lwjgl:$lwjglVersion"
    implementation "org.lwjgl:lwjgl-vulkan:$lwjglVersion"

    testImplementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")
    testImplementation "org.lwjgl:lwjgl-glfw"
    testRuntimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
    testRuntimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
    if (lwjglNatives == "natives-macos")
        testRuntimeOnly "org.lwjgl:lwjgl-vulkan::$lwjglNatives"

}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}
